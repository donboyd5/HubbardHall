{"title":"Attendance","markdown":{"yaml":{"output":"html_document","editor_options":{"chunk_output_type":"console"}},"headingText":"Attendance","containsRefs":false,"markdown":"\n\n\n\n```{r}\n#| label: setup\n#| include: false\n\nsource(here::here(\"r\", \"libraries.r\"))\nsource(here::here(\"r\", \"libraries_ts.r\"))\nsource(here::here(\"r\", \"constants.r\"))\nsource(here::here(\"r\", \"functions.r\"))\n\n```\n\n\n\n```{r}\n#| label: getdata\n#| include: false\n\nvnames <- readRDS(here::here(\"data\", \"rds\", \"vnames.rds\"))\nattend <- readRDS(here::here(\"data\", \"rds\", \"attendance.rds\"))\n  \n```\n\n\n```{r}\n#| label: xwalk_prep\n#| include: false\n#| eval: false\n\nattend |> \n  select(evdate_start, evname) |> \n  distinct() |> \n  write_csv(here::here(\"data\", \"event_xwalk_raw.csv\"))\n\n\n\n\n```\n\n\n```{r}\n#| label: play\n#| include: false\n#| eval: false\n\nglimpse(attend)\nskim(attend)\ntmp <- count(attend, evname)\ncount(attend, evcategory)\n\nattend |> \n  filter(evdate_start != evdate_end) |> \n  count(evname, sort = TRUE)\n\nattend |> \n  filter(evdate_start != evdate_end) |> \n  select(evname, evdate_start, evdate_end)\n\ntmp2 <- attend |> \n  filter(str_detect(evname, \"Elixir of Love\"))\ncount(tmp2, evname)\n\nattend |> \n  filter(str_detect(evname, \"Elixir of Love\")) |> \n  summarise(n=n(), count=sum(evcount), .by=c(evname, evdate_start, evdate_end)) |>\n  arrange(evdate_start)\n\n\nattend |> \n  filter(evcategory==\"Theater Performances\") |> \n  summarise(n=n(), count=sum(evcount), .by=c(evname, evdate_start, evdate_end)) |>\n  arrange(evdate_start)\n\nplays <- attend |> \n  filter(str_detect(evcategory, coll(\"Performances\", ignore_case=TRUE)), evdate_start==evdate_end) |> \n  mutate(evdate=as.Date(evdate_start)) |> \n  summarise(n=n(), count=sum(evcount), amount=sum(evamount), .by=c(evname, evdate, fyear)) |>\n  arrange(desc(evdate))\ncount(plays, evname)\n\nplays |> \n  arrange(desc(amount))\n\nplays |> \n  filter(evdate <= \"2023-09-30\")\n\npdata <- plays |> \n  filter(evdate <= \"2023-09-30\") |>  \n  mutate(evdate=yearmonth(evdate)) |> \n  summarise(n=sum(n), count=sum(count), amount=sum(amount), .by=evdate) |>\n  as_tsibble(index=evdate) |> \n  fill_gaps(.full = TRUE, amount=0)\n\npdata |>  \n  gg_subseries(amount) + \n  geom_point() +\n  ggtitle(\"$ revenue from performances\") +\n  theme_bw() +\n  x90\n\nplays |> \n  filter(month(evdate)==8) |>  \n  summarise(n=sum(n), count=sum(count), amount=sum(amount), .by=c(evdate, fyear, evname)) |> \n  arrange(evdate)\n\naug <- plays |> \n  filter(month(evdate)==8) |>  \n  summarise(n=sum(n), count=sum(count), amount=sum(amount), .by=c(evdate, fyear, evname)) |> \n  arrange(evdate) |> \n  mutate(evname2=str_remove(evname, \"SOLD OUT\"),\n         evname2=str_remove_all(evname2, \"!\"),\n         evname2=str_trim(evname2),\n         evname3=str_sub(evname2, 1, 22))\n\naug |> \n  mutate(cyear=year(evdate)) |>\n  summarise(ndates=n(), count=sum(count), amount=sum(amount), .by=c(cyear, evname3)) |> \n  arrange(cyear) |> \n  gt() |> \n  tab_header(\n    title = html(\"Hubbard Hall Attendance and Revenue by Year and Performance\")\n  ) |>\n  cols_label(evname3=html(\"Event (short name)\"),\n             ndates = html(\"Number of performances\")) |>\n  fmt_number(columns=c(ndates, count),\n             decimals=) |> \n  fmt_currency(columns=c(amount),\n               decimals=0)\n\nglimpse(attend)\nattend |>\n  summarise(n=sum(), evcount=sum(evcount), evamount=sum(evamount), .by=c(evdate_start, evdate_end, evname)) |> \n  arrange(desc(evdate_start))\n\n\nxvals <- c(\"Teen\", \"CCS Drama Club\", \"CS and Youth Chorale\", \"Cambridge Central School\", \"Youth Theatre\",\n           \"Test Event\", \"Youth Theater\", \"Music from Salem\", \"Rehearsal\", \"Cancelled\")\nplays2 <- plays |> \n  filter(!str_detect_any(evname, xvals))\n\nplays2 |> \n  ggplot(aes(evdate, count)) +\n  geom_point()\n\nplays |> \n  \n\n  \nplays2 |> \n  filter(str_detect(evname, \"Holiday\"))\n\nplays2 |> \n  filter(str_detect(evname, \"Gala\"))\n\nattend |> \n  filter(str_detect(evname, coll(\"Gala\", ignore_case=TRUE))) |> \n  summarise(n=n(), count=sum(evcount), .by=c(evname, evdate_start)) |> \n  arrange(evdate_start) |> \n  filter(!str_detect_any(evname, c(\"Kids\")))\n\n\ntmp <- attend |> \n  filter(year(evdate_start)==2013) |> \n  count(evcategory, evname)\n\n\n```\n\n\n","srcMarkdownNoYaml":"\n\n# Attendance\n\n\n```{r}\n#| label: setup\n#| include: false\n\nsource(here::here(\"r\", \"libraries.r\"))\nsource(here::here(\"r\", \"libraries_ts.r\"))\nsource(here::here(\"r\", \"constants.r\"))\nsource(here::here(\"r\", \"functions.r\"))\n\n```\n\n\n\n```{r}\n#| label: getdata\n#| include: false\n\nvnames <- readRDS(here::here(\"data\", \"rds\", \"vnames.rds\"))\nattend <- readRDS(here::here(\"data\", \"rds\", \"attendance.rds\"))\n  \n```\n\n\n```{r}\n#| label: xwalk_prep\n#| include: false\n#| eval: false\n\nattend |> \n  select(evdate_start, evname) |> \n  distinct() |> \n  write_csv(here::here(\"data\", \"event_xwalk_raw.csv\"))\n\n\n\n\n```\n\n\n```{r}\n#| label: play\n#| include: false\n#| eval: false\n\nglimpse(attend)\nskim(attend)\ntmp <- count(attend, evname)\ncount(attend, evcategory)\n\nattend |> \n  filter(evdate_start != evdate_end) |> \n  count(evname, sort = TRUE)\n\nattend |> \n  filter(evdate_start != evdate_end) |> \n  select(evname, evdate_start, evdate_end)\n\ntmp2 <- attend |> \n  filter(str_detect(evname, \"Elixir of Love\"))\ncount(tmp2, evname)\n\nattend |> \n  filter(str_detect(evname, \"Elixir of Love\")) |> \n  summarise(n=n(), count=sum(evcount), .by=c(evname, evdate_start, evdate_end)) |>\n  arrange(evdate_start)\n\n\nattend |> \n  filter(evcategory==\"Theater Performances\") |> \n  summarise(n=n(), count=sum(evcount), .by=c(evname, evdate_start, evdate_end)) |>\n  arrange(evdate_start)\n\nplays <- attend |> \n  filter(str_detect(evcategory, coll(\"Performances\", ignore_case=TRUE)), evdate_start==evdate_end) |> \n  mutate(evdate=as.Date(evdate_start)) |> \n  summarise(n=n(), count=sum(evcount), amount=sum(evamount), .by=c(evname, evdate, fyear)) |>\n  arrange(desc(evdate))\ncount(plays, evname)\n\nplays |> \n  arrange(desc(amount))\n\nplays |> \n  filter(evdate <= \"2023-09-30\")\n\npdata <- plays |> \n  filter(evdate <= \"2023-09-30\") |>  \n  mutate(evdate=yearmonth(evdate)) |> \n  summarise(n=sum(n), count=sum(count), amount=sum(amount), .by=evdate) |>\n  as_tsibble(index=evdate) |> \n  fill_gaps(.full = TRUE, amount=0)\n\npdata |>  \n  gg_subseries(amount) + \n  geom_point() +\n  ggtitle(\"$ revenue from performances\") +\n  theme_bw() +\n  x90\n\nplays |> \n  filter(month(evdate)==8) |>  \n  summarise(n=sum(n), count=sum(count), amount=sum(amount), .by=c(evdate, fyear, evname)) |> \n  arrange(evdate)\n\naug <- plays |> \n  filter(month(evdate)==8) |>  \n  summarise(n=sum(n), count=sum(count), amount=sum(amount), .by=c(evdate, fyear, evname)) |> \n  arrange(evdate) |> \n  mutate(evname2=str_remove(evname, \"SOLD OUT\"),\n         evname2=str_remove_all(evname2, \"!\"),\n         evname2=str_trim(evname2),\n         evname3=str_sub(evname2, 1, 22))\n\naug |> \n  mutate(cyear=year(evdate)) |>\n  summarise(ndates=n(), count=sum(count), amount=sum(amount), .by=c(cyear, evname3)) |> \n  arrange(cyear) |> \n  gt() |> \n  tab_header(\n    title = html(\"Hubbard Hall Attendance and Revenue by Year and Performance\")\n  ) |>\n  cols_label(evname3=html(\"Event (short name)\"),\n             ndates = html(\"Number of performances\")) |>\n  fmt_number(columns=c(ndates, count),\n             decimals=) |> \n  fmt_currency(columns=c(amount),\n               decimals=0)\n\nglimpse(attend)\nattend |>\n  summarise(n=sum(), evcount=sum(evcount), evamount=sum(evamount), .by=c(evdate_start, evdate_end, evname)) |> \n  arrange(desc(evdate_start))\n\n\nxvals <- c(\"Teen\", \"CCS Drama Club\", \"CS and Youth Chorale\", \"Cambridge Central School\", \"Youth Theatre\",\n           \"Test Event\", \"Youth Theater\", \"Music from Salem\", \"Rehearsal\", \"Cancelled\")\nplays2 <- plays |> \n  filter(!str_detect_any(evname, xvals))\n\nplays2 |> \n  ggplot(aes(evdate, count)) +\n  geom_point()\n\nplays |> \n  \n\n  \nplays2 |> \n  filter(str_detect(evname, \"Holiday\"))\n\nplays2 |> \n  filter(str_detect(evname, \"Gala\"))\n\nattend |> \n  filter(str_detect(evname, coll(\"Gala\", ignore_case=TRUE))) |> \n  summarise(n=n(), count=sum(evcount), .by=c(evname, evdate_start)) |> \n  arrange(evdate_start) |> \n  filter(!str_detect_any(evname, c(\"Kids\")))\n\n\ntmp <- attend |> \n  filter(year(evdate_start)==2013) |> \n  count(evcategory, evname)\n\n\n```\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"paged","error":false,"eval":true,"cache":null,"freeze":"auto","echo":false,"output":"html_document","warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"note":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"attendance.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.480","editor_options":{"chunk_output_type":"console"},"theme":"cosmo"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}